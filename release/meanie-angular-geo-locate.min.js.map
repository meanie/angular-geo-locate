{"version":3,"sources":["geoLocate.service.js","meanie-angular-geo-locate.min.js"],"names":["window","angular","undefined","module","factory","$q","$window","$location","$rootScope","options","reason","navigator","geolocation","protocol","$broadcast","reject","deferred","defer","getCurrentPosition","position","$apply","resolve","error","code","promise"],"mappings":"CAOA,SAAAA,EAAAC,EAAAC,GAAA,YAKAD,GAAAE,OAAA,wBAKAC,QAAA,cAAA,KAAA,UAAA,YAAA,aAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,MAAA,UAAAC,GACA,GAAAC,EAaA,IAVAJ,EAAAK,UAAAC,YAKA,SAAAL,EAAAM,aACAH,EAAA,oBALAA,EAAA,qBASAA,EAEA,MADAF,GAAAM,WAAA,oBAAAJ,GACAL,EAAAU,OAAAL,EAIA,IAAAM,GAAAX,EAAAY,OCkCI,OD/BJX,GAAAK,UAAAC,YAAAM,mBAAA,SAAAC,GAGAX,EAAAM,WAAA,uBAAAK,GACAX,EAAAY,OAAA,WACAJ,EAAAK,QAAAF,MAEA,SAAAG,GAGA,GAAAZ,EACA,QAAAY,EAAAC,MACA,IAAA,GACAb,EAAA,kBACA,MACA,KAAA,GACAA,EAAA,qBACA,MACA,KAAA,GACAA,EAAA,UAKAF,EAAAM,WAAA,oBAAAJ,GACAF,EAAAY,OAAA,WACAJ,EAAAD,OAAAL,MAEAD,GCGWO,EAASQ,aAIjBxB,OAAQA,OAAOC","file":"meanie-angular-geo-locate.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('GeoLocate.Service', [])\n\n/**\n * Service definition\n */\n.factory('$geoLocate', ['$q', '$window', '$location', '$rootScope', function($q, $window, $location, $rootScope) {\n  return function geoLocate(options) {\n    var reason;\n\n    //Check if available\n    if (!$window.navigator.geolocation) {\n      reason = 'unsupportedBrowser';\n    }\n\n    //Check if on https (see https://goo.gl/rStTGz)\n    else if ($location.protocol() === 'http') {\n      reason = 'deprecatedOnHttp';\n    }\n\n    //If error reason present, reject\n    if (reason) {\n      $rootScope.$broadcast('geoLocation.error', reason);\n      return $q.reject(reason);\n    }\n\n    //Create deferred\n    var deferred = $q.defer();\n\n    //Geolocate\n    $window.navigator.geolocation.getCurrentPosition(function(position) {\n\n      //Broadcast position and resolve promise\n      $rootScope.$broadcast('geoLocation.position', position);\n      $rootScope.$apply(function() {\n        deferred.resolve(position);\n      });\n    }, function(error) {\n\n      //Determine reason\n      var reason;\n      switch (error.code) {\n        case 1:\n          reason = 'permissionDenied';\n          break;\n        case 2:\n          reason = 'positionUnavailable';\n          break;\n        case 3:\n          reason = 'timeout';\n          break;\n      }\n\n      //Broadcast error and reject promise\n      $rootScope.$broadcast('geoLocation.error', reason);\n      $rootScope.$apply(function() {\n        deferred.reject(reason);\n      });\n    }, options);\n\n    //Return promise\n    return deferred.promise;\n  };\n}]);\n\n})(window, window.angular);\n","/**\n * meanie-angular-geo-locate - v0.2.5 - 20-8-2015\n * https://github.com/meanie/angular-geo-locate\n *\n * Copyright (c) 2015 Adam Buczynski <me@adambuczynski.com>\n * License: MIT\n */\n!function(o,e,t){\"use strict\";e.module(\"GeoLocate.Service\",[]).factory(\"$geoLocate\",[\"$q\",\"$window\",\"$location\",\"$rootScope\",function(o,e,t,r){return function(n){var a;if(e.navigator.geolocation?\"http\"===t.protocol()&&(a=\"deprecatedOnHttp\"):a=\"unsupportedBrowser\",a)return r.$broadcast(\"geoLocation.error\",a),o.reject(a);var i=o.defer();return e.navigator.geolocation.getCurrentPosition(function(o){r.$broadcast(\"geoLocation.position\",o),r.$apply(function(){i.resolve(o)})},function(o){var e;switch(o.code){case 1:e=\"permissionDenied\";break;case 2:e=\"positionUnavailable\";break;case 3:e=\"timeout\"}r.$broadcast(\"geoLocation.error\",e),r.$apply(function(){i.reject(e)})},n),i.promise}}])}(window,window.angular);\n//# sourceMappingURL=meanie-angular-geo-locate.min.js.map"],"sourceRoot":"/source/"}