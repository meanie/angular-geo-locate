{"version":3,"sources":["geoLocate.service.js"],"names":["angular","module","reason","$q","$window","$location","$rootScope","navigator","geolocation","$broadcast","reject","deferred","error","code","$apply","promise","window"],"mappings":"iBAKAA,eAMEC,OAAO,gCAKHC,cAAS,KAAA,UAAA,YAAA,aAAA,SAAAC,EAAAC,EAAAC,EAAAC,4BAeX,GAVEJ,EAASK,UAAAC,YAKa,SAAtBF,EAAWG,aACXP,EAAUQ,2CAIRC,6DAMFL,EAAWG,EAAAA,6GAOXH,EAAIJ,OAAAA,WACJS,EAAQC,QAAMC,eAEVX,OAGAA,SACAU,EAAAC,MACF,KAAK,EACHX,EAAS,mBACT,2CAIJI,KAAAA,EACAA,EAAWQ,8CAMbR,EAAOK,OAASI,0BAIjBC","file":"angular-geo-locate.min.js","sourcesContent":["(function(window, angular, undefined) {'use strict';\n\n/**\n * Module definition and dependencies\n */\nangular.module('GeoLocate.Service', [])\n\n/**\n * Service definition\n */\n.factory('$geoLocate', function($q, $window, $location, $rootScope) {\n  return function geoLocate(options) {\n    var reason;\n\n    //Check if available\n    if (!$window.navigator.geolocation) {\n      reason = 'unsupportedBrowser';\n    }\n\n    //Check if on https (see https://goo.gl/rStTGz)\n    else if ($location.protocol() === 'http') {\n      reason = 'deprecatedOnHttp';\n    }\n\n    //If error reason present, reject\n    if (reason) {\n      $rootScope.$broadcast('geoLocation.error', reason);\n      return $q.reject(reason);\n    }\n\n    //Create deferred\n    var deferred = $q.defer();\n\n    //Geolocate\n    $window.navigator.geolocation.getCurrentPosition(function(position) {\n\n      //Broadcast position and resolve promise\n      $rootScope.$broadcast('geoLocation.position', position);\n      $rootScope.$apply(function() {\n        deferred.resolve(position);\n      });\n    }, function(error) {\n\n      //Determine reason\n      var reason;\n      switch (error.code) {\n        case 1:\n          reason = 'permissionDenied';\n          break;\n        case 2:\n          reason = 'positionUnavailable';\n          break;\n        case 3:\n          reason = 'timeout';\n          break;\n      }\n\n      //Broadcast error and reject promise\n      $rootScope.$broadcast('geoLocation.error', reason);\n      $rootScope.$apply(function() {\n        deferred.reject(reason);\n      });\n    }, options);\n\n    //Return promise\n    return deferred.promise;\n  };\n});\n\n})(window, window.angular);\n"]}